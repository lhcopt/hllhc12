scale = 23348.89927;
scl := 0.03*7000./nrj;
qtlimitx28 := 1.0*225.0/scale;
qtlimitx15 := 1.0*205.0/scale;
qtlimit2 := 1.0*160.0/scale;
qtlimit3 := 1.0*200.0/scale;
qtlimit4 := 1.0*125.0/scale;
qtlimit5 := 1.0*120.0/scale;
qtlimit6 := 1.0*90.0/scale;

if(scl==0){ scl=0.10;};
if(sch==0){ sch=0.99;};


if(on_holdselect==0){
 exec,select(8,78,81,b1);
 exec,select(8,78,81,b2);
};

if(on_fixedip==1){
muxip8b1=3.0200;betxip8b1=10.0000;
muyip8b1=2.8000;betyip8b1=10.0000;
dxip8b1=0;dpxip8b1=0;alfxip8b1=0;alfyip8b1=0;
muxip8b2=3.0200;betxip8b2=10.0000;
muyip8b2=2.8000;betyip8b2=10.0000;
dxip8b2=0;dpxip8b2=0;alfxip8b2=0;alfyip8b2=0;
};
value,muxip8b1,betxip8b1,alfxip8b1;
value,muyip8b1,betyip8b1,alfyip8b1;
value,dxip8b1,dpxip8b1;
value,muxip8b2,betxip8b2,alfxip8b2;
value,muyip8b2,betyip8b2,alfyip8b2;
value,dxip8b2,dpxip8b2;

kqx.r8:=-kqx.l8;

if (match_inj_tunes==1){
  KQX.L8=0.950981581300E-02;
}



use,sequence=lhcb1,range=s.ds.l8.b1/e.ds.r8.b1;
use,sequence=lhcb2,range=s.ds.l8.b2/e.ds.r8.b2;
match,      sequence=lhcb1,lhcb2,beta0=bir8b1,bir8b2;
weight,mux=10,muy=10;
if (no_match_beta==0){
constraint,sequence=lhcb1,range=ip8,betx=betxip8b1,bety=betyip8b1;
constraint,sequence=lhcb2,range=ip8,betx=betxip8b2,bety=betyip8b2;
};
constraint,sequence=lhcb1,range=ip8,dx=dxip8b1,dpx =dpxip8b1;
constraint,sequence=lhcb1,range=ip8,alfx=alfxip8b1,alfy=alfyip8b1;
constraint,sequence=lhcb2,range=ip8,dx=dxip8b2,dpx =dpxip8b2;
constraint,sequence=lhcb2,range=ip8,alfx=alfxip8b2,alfy=alfyip8b2;
constraint,sequence=lhcb1,range=e.ds.r8.b1,alfx=eir8b1->alfx,alfy=eir8b1->alfy;
constraint,sequence=lhcb1,range=e.ds.r8.b1,betx=eir8b1->betx,bety=eir8b1->bety;
constraint,sequence=lhcb1,range=e.ds.r8.b1,dx=eir8b1->dx,dpx=eir8b1->dpx;
constraint,sequence=lhcb1,range=e.ds.r8.b1,   mux=muxip8b1+eir8b1->mux;
constraint,sequence=lhcb1,range=e.ds.r8.b1,   muy=muyip8b1+eir8b1->muy;
constraint,sequence=lhcb2,range=e.ds.r8.b2,alfx=eir8b2->alfx,alfy=eir8b2->alfy;
constraint,sequence=lhcb2,range=e.ds.r8.b2,betx=eir8b2->betx,bety=eir8b2->bety;
constraint,sequence=lhcb2,range=e.ds.r8.b2,dx=eir8b2->dx,dpx=eir8b2->dpx;
constraint,sequence=lhcb2,range=e.ds.r8.b2,   mux=muxip8b2+eir8b2->mux;
constraint,sequence=lhcb2,range=e.ds.r8.b2,   muy=muyip8b2+eir8b2->muy;
if (apq6>50){
constraint, sequence=lhcb1, range=mqm.6r8.b1,betx<apq6;
constraint, sequence=lhcb1, range=mqm.6l8.b1,bety<apq6;
constraint, sequence=lhcb2, range=mqm.6r8.b2,bety<apq6;
constraint, sequence=lhcb2, range=mqm.6l8.b2,betx<apq6;
};
if (apq7>50){
constraint, sequence=lhcb1, range=mqm.a7r8.b1,bety<apq7;
constraint, sequence=lhcb1, range=mqm.a7l8.b1,betx<apq7;
constraint, sequence=lhcb2, range=mqm.a7r8.b2,betx<apq7;
constraint, sequence=lhcb2, range=mqm.a7l8.b2,bety<apq7;
};
if (apq8>50){
constraint, sequence=lhcb1, range=mqml.8r8.b1,betx<apq8;
constraint, sequence=lhcb1, range=mqml.8l8.b1,bety<apq8;
constraint, sequence=lhcb2, range=mqml.8r8.b2,bety<apq8;
constraint, sequence=lhcb2, range=mqml.8l8.b2,betx<apq8;
};
if (is_thin==0){
!if (scxir1>0.1){constraint, sequence=lhcb1, range=mqm.6l8.b1,bety<215;};
!if (scxir1>0.1){constraint, sequence=lhcb1, range=mqm.a7r8.b1,bety<350;};
!if (scxir1>0.10){ constraint, sequence=lhcb2, range=mqm.b7l8.b2,bety<200;}
};
if(match_on_aperture==1){
constraint, sequence=lhcb1, range=mq.11l8.b1,betx<174.+0+epsap;
constraint, sequence=lhcb1, range=mqml.10l8.b1,bety<177.+1+epsap;
constraint, sequence=lhcb1, range=mqm.6l8.b1,bety<308.1+2+epsap;
constraint, sequence=lhcb1, range=mqm.6r8.b1,betx<300.56+epsap;
constraint, sequence=lhcb1, range=mqm.a7r8.b1,bety<163+1+epsap;
constraint, sequence=lhcb1, range=mqm.9r8.b1,bety<178.2+1+epsap;
constraint, sequence=lhcb1, range=mq.11r8.b1,bety<178+epsap;
constraint, sequence=lhcb1, range=mq.12r8.b1,betx<176+epsap;
constraint, sequence=lhcb2, range=mqm.6l8.b2,betx<315.0+epsap;
constraint, sequence=lhcb2, range=mqm.9l8.b2,bety<155+13+epsap;
constraint, sequence=lhcb2, range=mqml.8r8.b2,bety<172+epsap;
constraint, sequence=lhcb2, range=mqml.10r8.b2,bety<178+1.5+epsap;
};
if (match_on_triplet==1){
  vary,name=kqx.l8, step=1.0E-6, lower= qtlimitx28*scl, upper=qtlimitx28;
};
if (match_inj_tunes==0){
 vary,name=kq5.l8b2,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
 vary,name=kq4.l8b2,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
 vary,name=kq4.r8b2,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
 vary,name=kq5.r8b2,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
};
vary,name=kq4.l8b1,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
vary,name=kq4.r8b1,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
vary,name=kq5.l8b1,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
vary,name=kq5.r8b1,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
vary,name=kq6.l8b1,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
vary,name=kq6.r8b1,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
vary,name=kq6.l8b2,    step=1.0E-6, lower= sch*qtlimit2*scl, upper= sch*qtlimit2;
vary,name=kq6.r8b2,    step=1.0E-6, lower=-sch*qtlimit2, upper=-sch*qtlimit2*scl;
vary,name=kq7.l8b1,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq7.r8b1,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq7.l8b2,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq7.r8b2,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq8.l8b1,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq8.r8b1,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq8.l8b2,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq8.r8b2,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq9.l8b1,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq9.r8b1,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq9.l8b2,    step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq9.r8b2,    step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq10.l8b1,   step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kq10.r8b1,   step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq10.l8b2,   step=1.0E-6, lower= sch*qtlimit3*scl, upper= sch*qtlimit3;
vary,name=kq10.r8b2,   step=1.0E-6, lower=-sch*qtlimit3, upper=-sch*qtlimit3*scl;
vary,name=kqtl11.l8b1, step=1.0E-6, lower=-sch*qtlimit4, upper= sch*qtlimit4;
vary,name=kqtl11.r8b1, step=1.0E-6, lower=-sch*qtlimit4, upper= sch*qtlimit4;
vary,name=kqtl11.l8b2, step=1.0E-6, lower=-sch*qtlimit4, upper= sch*qtlimit4;
vary,name=kqtl11.r8b2, step=1.0E-6, lower=-sch*qtlimit4, upper= sch*qtlimit4;
vary,name=kqt12.l8b1,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt12.r8b1,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt12.l8b2,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt12.r8b2,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt13.l8b1,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt13.r8b1,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt13.l8b2,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
vary,name=kqt13.r8b2,  step=1.0E-6, lower=-sch*qtlimit5, upper= sch*qtlimit5;
jacobian,calls=jac_calls, tolerance=jac_tol, bisec=jac_bisec;
endmatch;

exec,mk_irtwiss(8,b1);
exec,mk_irtwiss(8,b2);

muxip8b1_l=refmuxip8b1_l;
muyip8b1_l=refmuyip8b1_l;
muxip8b2_l=refmuxip8b2_l;
muyip8b2_l=refmuyip8b2_l;
muxip8b1_r=refmuxip8b1-eir8b1->mux-refmuxip8b1_l;
muyip8b1_r=refmuyip8b1-eir8b1->muy-refmuyip8b1_l;
muxip8b2_r=refmuxip8b2-eir8b2->mux-refmuxip8b2_l;
muyip8b2_r=refmuyip8b2-eir8b2->muy-refmuyip8b2_l;


value,refmuxip8b1-eir8b1->mux;
value,refmuyip8b1-eir8b1->muy;
value,refmuxip8b2-eir8b2->mux;
value,refmuyip8b2-eir8b2->muy;

value,kqx.l8-0.00950981581300000024 ,kq4.l8b2-0.00472469192800000024,kq5.l8b2+0.00549004210299999969,
      kq4.r8b2+0.00447368899600000033,kq5.r8b2-0.00425682473399999987 ;
value,table(twiss,MKI.A5R8.B2,betx),table(twiss,MKI.A5R8.B2,bety);
value,table(twiss,MSIA.A6R8.B2,betx),table(twiss,MSIA.A6R8.B2,bety);
value,table(twiss,MSIA.A6R8.B2,alfx),table(twiss,MSIA.A6R8.B2,alfy);
value,-(table(twiss,TDI.4R8.B2,muy)-table(twiss,MKI.A5R8.B2,muy))*360;
value,-(table(twiss,TDI.4R8.B2,muy)-table(twiss,MKI.D5R8.B2,muy))*360;
! 346 before
value,-(table(twiss,TCLIB.6L8.B2,muy)-table(twiss,TDI.4R8.B2,muy))*360;

value,kqx.l8*scale;


value,kqx.l8,kqx.r8,kqt13.l8b1,kqt12.l8b1,kqtl11.l8b1,kq10.l8b1,kq9.l8b1,kq8.l8b1,kq7.l8b1,
kq6.l8b1,kq5.l8b1,kq4.l8b1,kq4.r8b1,kq5.r8b1,kq6.r8b1,kq7.r8b1,kq8.r8b1,kq9.r8b1,kq10.r8b1,
kqtl11.r8b1,kqt12.r8b1,kqt13.r8b1;
value,kqx.l8,kqx.r8,kqt13.l8b2,kqt12.l8b2,kqtl11.l8b2,kq10.l8b2,kq9.l8b2,kq8.l8b2,kq7.l8b2,
kq6.l8b2,kq5.l8b2,kq4.l8b2,kq4.r8b2,kq5.r8b2,kq6.r8b2,kq7.r8b2,kq8.r8b2,kq9.r8b2,kq10.r8b2,
kqtl11.r8b2,kqt12.r8b2,kqt13.r8b2;


kqx.r8=kqx.r8;

value,-kq4.r8b1/kq4.r8b2;
value,-kq5.r8b1/kq5.r8b2;
value,-kq6.r8b1/kq6.r8b2;
value,-kq7.r8b1/kq7.r8b2;
value,-kq8.r8b1/kq8.r8b2;
value,-kq9.r8b1/kq9.r8b2;
value,-kq10.r8b1/kq10.r8b2;
value,-kq4.l8b1/kq4.l8b2;
value,-kq5.l8b1/kq5.l8b2;
value,-kq6.l8b1/kq6.l8b2;
value,-kq7.l8b1/kq7.l8b2;
value,-kq8.l8b1/kq8.l8b2;
value,-kq9.l8b1/kq9.l8b2;
value,-kq10.l8b1/kq10.l8b2;

if (no_match_beta==1){
betavg=(refbetxip8b1+refbetxip8b2+refbetyip8b1+refbetyip8b2)/4;
betxip8b1=betavg;
betyip8b1=betavg;
betxip8b2=betavg;
betyip8b2=betavg;

value,betavg;
};



!Strategy 11->22: fix the left, kqt12.r8b1 & kq7.r8b1
!Strategy 22->28: fix the left, kqt12.r8b1 & kq7.r8b1 (till 0.5/0.23) then kqt13.r8b1 & kq8.r8b1
!Strategy 22->82: touch the left in away to be defined
!constraint,sequence=lhcb1,range=MQM.A7r8.B1,bety=375;
!constraint,sequence=lhcb1,range=MQML.6r8.B1,betx<700;

tarir8b12=tar;
tarir8b1=tar;
tarir8b2=tar;
value,tarir8b12;
value,-(table(twiss,TCLIB.6L8.B2,muy)-table(twiss,TDI.4R8.B2,muy))*360;
